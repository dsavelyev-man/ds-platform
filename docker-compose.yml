version: "3.9"

services:
  gateway:
    build:
      context: ./app/gateway
      target: "${NODE_ENV}"
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    entrypoint: [ "npm", "run", "docker:${NODE_ENV}" ]
    env_file:
      - .env
    volumes:
      - ./app/gateway:/usr/src/gateway
      - /usr/src/gateway/node_modules
    networks:
      - app
  users-service:
    build:
      context: ./app/users
      target: "${NODE_ENV}"
#    ports:
#      - "${API_PORT}:${API_PORT}"
    entrypoint: ["npm", "run", "docker:${NODE_ENV}"]
    env_file:
      - .env
    volumes:
      - ./app/users:/usr/src/service
      - /usr/src/service/node_modules
    networks:
      - app
  client:
    build:
      context: ./client
      target: "${NODE_ENV}"
    restart: on-failure
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
      - "24678:24678"
    command: npm run docker:${NODE_ENV}
    env_file: .env
    environment:
      PORT: ${CLIENT_PORT}
    volumes:
      - ./client:/usr/src/client
      - /usr/src/client/node_modules
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "5432:5432"
    networks:
      - app
    volumes:
      - db:/var/lib/postgresql/data
  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - app

networks:
  app:

volumes:
  db: