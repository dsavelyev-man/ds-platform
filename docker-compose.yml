version: "3.9"

services:
  gateway:
    build:
      dockerfile: ./apps/gateway/Dockerfile
      context: ./backend
      target: ${NODE_ENV}
    command: "sh ./start.${NODE_ENV}.sh"
    volumes:
      - ./backend/apps/gateway:/usr/src/app/apps/gateway
      - ./backend/database/migrations:/usr/src/app/database/migrations
    environment:
      - PROJECT=gateway
    env_file:
      - .env
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    depends_on:
      - postgres
      - users-service
    networks:
      - app
  users-service:
    build:
      dockerfile: ./apps/users/Dockerfile
      context: ./backend
      target: ${NODE_ENV}
    command: "sh ./start.${NODE_ENV}.sh"
    volumes:
      - ./backend/apps/users:/usr/src/app/apps/users
    environment:
      - PROJECT=users
    env_file:
      - .env
    ports:
      - "${MICROSERVICES_USERS_PORT}:${MICROSERVICES_USERS_PORT}"
    networks:
      - app
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "5432:5432"
    networks:
      - app
    volumes:
      - ./db:/var/lib/postgresql/data
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "${CACHE_REDIS_PORT}:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${CACHE_REDIS_PASSWORD}
    networks:
      - app
    volumes:
      - cache:/data

networks:
  app:
    driver: bridge

volumes:
  cache:
